#+BEGIN_HTML
---
layout: post
title: "DirectFB 上で gtk+/Qt などの GUI アプリケーションを常用してはいけない理由"
date: 2013-05-31 23:30
comments: true
categories: Linux
---
#+END_HTML
#+OPTIONS: toc:nil num:nil LaTeX:t
DirectFB はフレームバッファ上に、描画 API を提供するライブラリなのだけれど、 DirectFB の API を利用することによって、 フレームバッファ上に gtk+ アプリケーションを立ち上げることのできる Gtk-DFB [fn:1] というのがある。
この主な用途としては OS のインストールに際して、 GUI インストーラを使用する際にこれを立ち上げたり、組込みデバイスにおいて GUI アプリケーションを立ち上げるサポートを行ったりするらしい。

でも、 X 重いしデスクトップ環境でも GTK アプリケーションしか使わないんなら Gtk-DFB を常用しても構わないんじゃないの? とか思うわけなのだけれど、同じ質問が stackoverflow [fn:2] で投稿されていたのでまとめてみた。

以下、 Stack Overflow からの引用、和訳。

#+BEGIN_QUOTE
Havoc P の回答 (意訳):

X は最近の携帯電話よりもはるかに劣る計算機の時代に開発されたものなんだ。
だから、すでに使われていない様々な機能を未だに持っていたりするし，そのためにピクセルを描画するための機能が最適化されていないから、オーバーヘッドが大きいのは仕方がないことなんだ。

また、 X はもともとクライアントとサーバ間のモデルを抱えていて、デスクトップ環境だとクライアントとサーバが同じマシンの上で動いているために、いまいちパフォーマンスが悪いんだ。
このパフォーマンスの低下はクライアントとサーバ間の通信が原因でそれが関係しないエクステンション (pixmaps, DRI, etc...) はパフォーマンスの低下とあまり因果はないんだよ。
ただ、複数のプロセスがハードウェアに同一にアクセスすることがあるから、必ずしも X のソケット処理だけがネックであるとは限らないんだけどね。

だけど、ハードウェアに複数のプロセスがアクセスすることになるからこそ、プロセスのクラッシュを防ぐといった意味で X の利点というのはあるんだ。
Google Chrome について見てみると Google Chrome 上で複数のプロセスが走ることでメモリの使用量は大きくなるけれども、各プロセスが高速に動作することが示されている。
つまり、ただプロセス数が少なければそれらが高速に動作するというものではないんだよ。

DirectFB の API を利用して GTK アプリケーションを動作することが問題である理由はたくさんある。
例えば、 Firefox は大体、 X を経由して起動されるけど、 Firefox のブラウザプラグインには Firefox が描画に用いている Gtk+ を利用せず、例えば Adobe-Flash プラグインのような直接 X を用いて描画を行っているものがあるんだ。
他にも X を使用していないアプリケーションがあったとしてもその実行環境として、 Gnome や Xfce といった、結局は X に依存しているようなデスクトップ環境を想定しているものがあるんだ。

X を置換えることができない他の理由としてはドライバの存在がある。
nVidia のプロプライエタリなドライバはオープンソースのドライバより、パフォーマンスが高い状態で動作するけれども、これらは X に関連付けられていて、 X 無しで動作することができないんだ。
ソースコードも公開されていないから他に移植することもできないしね。

もちろん、移行の方法もあるけれど、 X と X の元で動作するデスクトップ環境等の上で動作する 100 以上のアプリを使用している場合、わざわざアプリが動作しない環境に移行しようとする人はいないだろう。
ほとんどの場合、新しいウィンドウシステム上でルートレスな X サーバを動作させることで古いアプリケーションを動作させることもできるんだ。 (Wayland のことカナァ)

古いものは決して悪ではなくて、 X は洗練されたウィンドウシステムであるんだ。
それに、より進化することで、今後、数年後も動作を保証するものでもあるんだよ。

とにかく僕が長々と言ってきたのは、今までのアプリがちゃんと動作する環境を作成したうえで X から離れるには膨大なコストを必要とするんだ。
そして、それは大体はハードウェアの問題だ。

X には様々な問題があって、 Wayland プロジェクトが目指しているようなアトミックな画面のアップデートなどがあるけれども、大体はユーザのための非アトミックなアップデートや開発者のために推奨されるような拡張機能のようなごまかしみたいなものなんだ。 ( atomic をどう訳せばいいのかワカラン)
ただ、 X を落として早さを手に入れればいいってもんじゃないんだ。
X はネットワークや古さに準拠することで再び安っぽいハードウェアのために設計されたんだ。
そう、私が X と emacs を 8MB の RAM で走らせているようにね。
#+END_QUOTE

ネットワークや GPU 等のハードウェアや X に完全に依存しないインストーラ等のシングルタスクのアプリケーションであれば問題ないという理解でよいのだろうな。


[fn:1]  http://directfb.org/wiki/index.php/Projects:GTK_on_DirectFB Projects:GTK on DirectFB - DirectFB
[fn:2]  http://stackoverflow.com/questions/3327767/why-is-directfb-not-more-widely-used-in-gnu-linux-are-there-crippling-limitatio graphics - Why is DirectFB not more widely used in GNU/Linux? Are there crippling limitations to it that don't exist in X11? - Stack Overflow
